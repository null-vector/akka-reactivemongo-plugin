
akka.persistence.journal.plugin = "akka-persistence-reactivemongo-journal"
akka.persistence.snapshot-store.plugin = "akka-persistence-reactivemongo-snapshot"
akka.persistence.state.plugin = "akka-persistence-reactivemongo-crud"

akka.persistence.journal.auto-start-journals = ["akka-persistence-reactivemongo-journal"]
akka.persistence.snapshot-store.auto-start-snapshot-stores = ["akka-persistence-reactivemongo-snapshot"]

akka-persistence-reactivemongo {
  mongo-uri = "mongodb://localhost/test?rm.nbChannelsPerNode=40&rm.keepAlive=true&rm.tcpNoDelay=true"
  //  mongo-uri = "mongodb://localhost/test?rm.failover=900ms:21x1.30"
  //  collection-name-mapping = "org.nullvector.DefaultCollectionNameMapping"
  //  read-journal {
  //    class = "org.nullvector.query.ReactiveMongoJournalProvider"
  //    refresh-interval = 2s
  //  }
}

custom.akka.persistent.adapters {
  event-adapters {
    legacyAdapter1 = "org.nullvector.EventSerializerSpec$SomeAkkaEventAdapter"
    "legacyAdapter2" = "org.nullvector.EventSerializerSpec$OtherAkkaEventAdapter"
  }

  event-adapter-bindings {
    "org.nullvector.EventSerializerSpec$SomeLegacyEvent" = "legacyAdapter1"
    "org.nullvector.EventSerializerSpec$OtherLegacyEvent" = legacyAdapter2
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 50
  log-dead-letters-during-shutdown = on
  actor {
      debug {
        # enable DEBUG logging of unhandled messages
        unhandled = on
        # enable DEBUG logging of actor lifecycle changes
        lifecycle = on
        # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
        autoreceive = on
      }
    }

}

